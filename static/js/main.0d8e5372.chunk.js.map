{"version":3,"sources":["Pagination/Pagination.jsx","helpers/makePagesArray.jsx","App.js","index.js"],"names":["Pagination","pagin","onChangePage","onClickPrev","onClickNext","onChangePerPage","onClickOption","total","perPage","page","option","lastPage","Math","ceil","forPage","toPage","location","useLocation","history","useHistory","searchParams","URLSearchParams","search","changeHistory","name","value","set","push","toString","className","Array","keys","map","m","String","fromCodePoint","makeEmojiArray","slice","t","key","typy","onChange","e","target","item","type","classNames","paginFerst","paginSecond","onClick","disabl","disabled","last","current","arr","makePagesArray","activ","state","App","useState","setPagin","path","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d8e5372.chunk.js","sourcesContent":["import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport classNames from 'classnames';\nimport { makeEmojiArray, makePagesArray } from '../helpers/makePagesArray';\n\nexport const Pagination = ({\n  pagin,\n  onChangePage,\n  onClickPrev,\n  onClickNext,\n  onChangePerPage,\n  onClickOption,\n}) => {\n  const { total, perPage, page, option } = pagin;\n  const lastPage = Math.ceil(total / perPage);\n  const forPage = ((page - 1) * perPage);\n  const toPage = perPage * page > total\n    ? total : perPage * page;\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n  const changeHistory = (name, value) => {\n    searchParams.set(name, value);\n    history.push(`?${searchParams.toString()}`);\n  };\n\n  return (\n    <div>\n      <div className=\"emoji\">\n        {makeEmojiArray(total).slice(forPage, toPage).map(t => (\n          <span className=\"emoji\" key={t}>{t}</span>\n        ))}\n      </div>\n      <div>\n        <span>\n          {`${forPage + 1} - ${toPage} of ${total}`}\n        </span>\n        <select\n          typy=\"select\"\n          value={perPage}\n          onChange={(e) => {\n            onChangePerPage(e);\n            changeHistory('page', 1);\n            changeHistory('perPage', e.target.value);\n          }}\n        >\n          {[3, 5, 10, 20].map(item => (\n            <option key={item} value={item}>{item}</option>\n          ))}\n        </select>\n        <button\n          type=\"button\"\n          className={classNames('option', {\n            paginFerst: option,\n            paginSecond: !option,\n          })}\n          onClick={onClickOption}\n        >\n          Option\n        </button>\n      </div>\n      <div className=\"pagination\">\n        <button\n          type=\"button\"\n          className={classNames('prev', { disabl: page === 1 })}\n          disabled={page === 1}\n          onClick={() => {\n            onClickPrev();\n            changeHistory('page', page - 1);\n          }}\n        >\n          Prev\n        </button>\n        {(option\n          ? makePagesArray(lastPage, page)\n          : [...Array(lastPage).keys()].map(item => item + 1))\n          .map(item => (\n            <button\n              key={item}\n              type=\"button\"\n              className={classNames('button', { activ: page === item })}\n              onClick={() => {\n                onChangePage(item);\n                changeHistory('page', item);\n              }}\n              disabled={item === '...'}\n            >\n              {item}\n            </button>\n          ))}\n        <button\n          type=\"button\"\n          className={classNames('next', { disabl: page === lastPage })}\n          disabled={page === lastPage}\n          onClick={() => {\n            onClickNext();\n            changeHistory('page', page + 1);\n          }}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nPagination.propTypes = {\n  pagin: PropTypes.shape().isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  onClickPrev: PropTypes.func.isRequired,\n  onClickNext: PropTypes.func.isRequired,\n  onChangePerPage: PropTypes.func.isRequired,\n  onClickOption: PropTypes.func.isRequired,\n};\n","export function makePagesArray(last, current) {\n  const arr = [1];\n\n  if (current > 3) {\n    arr.push('...');\n  }\n\n  if (current > 2) {\n    arr.push(current - 1);\n  }\n\n  if (current !== 1 && current !== last) {\n    arr.push(current);\n  }\n\n  if (last - 1 > current) {\n    arr.push(current + 1);\n  }\n\n  if (last - 2 > current) {\n    arr.push('...');\n  }\n\n  if (last !== 1) {\n    arr.push(last);\n  }\n\n  return arr;\n}\n\nexport function makeEmojiArray(total) {\n  return [...Array(total).keys()]\n    .map(m => String.fromCodePoint(`${128512 + m}`));\n}\n","import React, { useState } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { Pagination } from './Pagination/Pagination';\n\nconst state = {\n  total: 42,\n  perPage: 5,\n  page: 1,\n  option: false,\n};\n\nexport const App = () => {\n  const [pagin, setPagin] = useState(state);\n  const { page, option } = pagin;\n  const onPerPageChange = (e) => {\n    setPagin({\n      ...pagin,\n      perPage: e.target.value,\n      page: 1,\n    });\n  };\n\n  const onChangePage = (item) => {\n    setPagin({\n      ...pagin, page: item,\n    });\n  };\n\n  const onClickPrev = () => {\n    setPagin({\n      ...pagin, page: page - 1,\n    });\n  };\n\n  const onClickNext = () => {\n    setPagin({\n      ...pagin, page: page + 1,\n    });\n  };\n\n  const onClickOption = () => {\n    setPagin({\n      ...pagin, option: !option, page: 1,\n    });\n  };\n\n  return (\n    <Switch>\n      <Route path=\"/pagination\">\n        <h1>Pagination</h1>\n        <Pagination\n          pagin={pagin}\n          onChangePage={onChangePage}\n          onClickPrev={onClickPrev}\n          onClickNext={onClickNext}\n          onChangePerPage={onPerPageChange}\n          onClickOption={onClickOption}\n        />\n      </Route>\n      <Redirect path=\"/\" to=\"/pagination?perPage=5&page=1\" />\n    </Switch>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}