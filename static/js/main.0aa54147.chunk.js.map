{"version":3,"sources":["Content/Content.jsx","helpers/makePagesArray.jsx","Pagination/Pagination.jsx","App.js","index.js"],"names":["Content","pagination","total","perPage","page","forPage","toPage","className","Array","keys","map","item","String","fromCodePoint","makeEmojiArray","slice","emoji","key","Pagination","onChangePage","onClickPrev","onClickNext","onChangePerPage","onChangePagination","paginChanged","lastPage","Math","ceil","info","location","useLocation","history","useHistory","searchParams","URLSearchParams","search","changeHistory","name","value","set","push","toString","typy","onChange","e","target","type","classNames","no_changed","changed","onClick","pagin_first","pagin_second","disabled","last","current","arr","makePagesArray","val","activ","state","App","useState","setPagination","path","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0aa54147.chunk.js","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { makeEmojiArray } from '../helpers/makePagesArray';\n\nexport const Content = ({ pagination }) => {\n  const { total, perPage, page } = pagination;\n  const forPage = ((page - 1) * perPage);\n  const toPage = perPage * page > total ? total : perPage * page;\n\n  return (\n    <div className=\"emoji\">\n      {makeEmojiArray(total).slice(forPage, toPage).map(emoji => (\n        <span className=\"emoji\" key={emoji}>{emoji}</span>\n      ))}\n    </div>\n  );\n};\n\nContent.propTypes = {\n  pagination: PropTypes.shape().isRequired,\n};\n","export function makePagesArray(last, current) {\n  const arr = [1];\n\n  if (current > 3) {\n    arr.push('...');\n  }\n\n  if (current > 2) {\n    arr.push(current - 1);\n  }\n\n  if (current !== 1 && current !== last) {\n    arr.push(current);\n  }\n\n  if (last - 1 > current) {\n    arr.push(current + 1);\n  }\n\n  if (last - 2 > current) {\n    arr.push('...');\n  }\n\n  if (last !== 1) {\n    arr.push(last);\n  }\n\n  return arr;\n}\n\nexport function makeEmojiArray(total) {\n  return [...Array(total).keys()]\n    .map(item => String.fromCodePoint(`${128512 + item}`));\n}\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport classNames from 'classnames';\nimport { makePagesArray } from '../helpers/makePagesArray';\n\nexport const Pagination = ({\n  pagination,\n  onChangePage,\n  onClickPrev,\n  onClickNext,\n  onChangePerPage,\n  onChangePagination,\n}) => {\n  const { total, perPage, page, paginChanged } = pagination;\n  const lastPage = Math.ceil(total / perPage);\n  const info = `${((page - 1) * perPage) + 1} -\n    ${perPage * page > total ? total : perPage * page} of ${total}`;\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n  const changeHistory = (name, value) => {\n    searchParams.set(name, value);\n    history.push(`?${searchParams.toString()}`);\n  };\n\n  return (\n    <>\n      <div className=\"info\">\n        <span>\n          {info}\n        </span>\n        <select\n          typy=\"select\"\n          value={perPage}\n          onChange={(e) => {\n            onChangePerPage(e);\n            changeHistory('page', 1);\n            changeHistory('perPage', e.target.value);\n          }}\n        >\n          {[3, 5, 10, 20].map(item => (\n            <option key={item} value={item}>{item}</option>\n          ))}\n        </select>\n        <button\n          type=\"button\"\n          className={classNames('paginChanged', {\n            no_changed: !paginChanged,\n            changed: paginChanged,\n          })}\n          onClick={onChangePagination}\n        >\n          Change\n        </button>\n      </div>\n      <div className=\"pagination\">\n        <div className={classNames('pagin', {\n          pagin_first: !paginChanged,\n          pagin_second: paginChanged,\n        })}\n        >\n          {`${!paginChanged ? 'Pagination 1' : 'Pagination 2'}`}\n        </div>\n        <button\n          type=\"button\"\n          className={classNames('prev', { disabled: page === 1 })}\n          disabled={page === 1}\n          onClick={() => {\n            onClickPrev();\n            changeHistory('page', page - 1);\n          }}\n        >\n          Prev\n        </button>\n        {(paginChanged\n          ? makePagesArray(lastPage, page)\n          : [...Array(lastPage).keys()].map(val => val + 1))\n          .map(item => (\n            <button\n              key={item}\n              type=\"button\"\n              className={classNames('button', { activ: page === item })}\n              onClick={() => {\n                onChangePage(item);\n                changeHistory('page', item);\n              }}\n              disabled={item === '...'}\n            >\n              {item}\n            </button>\n          ))}\n        <button\n          type=\"button\"\n          className={classNames('next', { disabled: page === lastPage })}\n          disabled={page === lastPage}\n          onClick={() => {\n            onClickNext();\n            changeHistory('page', page + 1);\n          }}\n        >\n          Next\n        </button>\n      </div>\n    </>\n  );\n};\n\nPagination.propTypes = {\n  pagination: PropTypes.shape().isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  onClickPrev: PropTypes.func.isRequired,\n  onClickNext: PropTypes.func.isRequired,\n  onChangePerPage: PropTypes.func.isRequired,\n  onChangePagination: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport './App.css';\nimport { Content } from './Content/Content';\nimport { Pagination } from './Pagination/Pagination';\n\nconst state = {\n  total: 42,\n  perPage: 5,\n  page: 1,\n  paginChanged: false,\n};\n\nexport const App = () => {\n  const [pagination, setPagination] = useState(state);\n  const { perPage, page, paginChanged } = pagination;\n  const onPerPageChange = (e) => {\n    setPagination({\n      ...pagination,\n      perPage: e.target.value,\n      page: 1,\n    });\n  };\n\n  const onChangePage = (item) => {\n    setPagination({\n      ...pagination, page: item,\n    });\n  };\n\n  const onClickPrev = () => {\n    setPagination({\n      ...pagination, page: page - 1,\n    });\n  };\n\n  const onClickNext = () => {\n    setPagination({\n      ...pagination, page: page + 1,\n    });\n  };\n\n  const onChangePagination = () => {\n    setPagination({\n      ...pagination,\n      paginChanged: !paginChanged,\n      page: 1,\n    });\n  };\n\n  return (\n    <Switch>\n      <Route path=\"/pagination\">\n        <h1>Pagination</h1>\n        <Content pagination={pagination} />\n        <Pagination\n          pagination={pagination}\n          onChangePage={onChangePage}\n          onClickPrev={onClickPrev}\n          onClickNext={onClickNext}\n          onChangePerPage={onPerPageChange}\n          onChangePagination={onChangePagination}\n        />\n      </Route>\n      <Redirect path=\"/\" to={`/pagination?perPage=${perPage}&page=${page}`} />\n    </Switch>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}